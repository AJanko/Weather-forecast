# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $lat: 50.049683
            $lon: 19.944544

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    Google\Cloud\BigQuery\BigQueryClient:
        arguments:
            $config:
                projectId: '%env(BIG_QUERY_PROJECT_ID)%'
                keyFilePath: '%kernel.project_dir%/config/.google-key.json'

    App\Repository\LocalWarehouse\LocalDataRepository:
        arguments:
            $trainingPath: '%kernel.project_dir%/vars/data/mapped_training.json'
            $testingPath: '%kernel.project_dir%/vars/data/mapped_testing.json'

    App\Repository\DataWarehouse\BigQueryRepository:
        arguments:
            $projectId: '%env(BIG_QUERY_PROJECT_ID)%'
            $modelId: '%env(BIG_QUERY_MODEL_ID)%'
            $trainingTableId: '%env(BIG_QUERY_TRAINING_TABLE)%'

    App\Client\OpenWeather:
        arguments:
            $apiKey: '%env(OPEN_WEATHER_API_KEY)%'

    App\Client\WeatherApi:
        arguments:
            $apiKey: '%env(WEATHER_API_API_KEY)%'

    App\Client\PHPML:
        arguments:
            $pathToModel: '%kernel.project_dir%/vars/model/wp.est'

    App\Repository\WeatherDataSource\WeatherRepositoryInterface: '@App\Repository\WeatherDataSource\WeatherApiRepository'

    App\Renderer\PlotRenderer:
        arguments:
            $dirPath: '%kernel.project_dir%/vars/evaluation'

    App\Predictor\PredictorRepositoryInterface:
        alias: App\Repository\PHPML\PHPMLRepository

    Phpml\ModelManager:

    GuzzleHttp\Client:

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
